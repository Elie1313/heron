heron <- function(a, b, c) {
# Calculer le demi-périmètre
p <- (a + b + c) / 2
# Calculer l'aire à l'aide de la formule d'Héron
area <- sqrt(p * (p - a) * (p - b) * (p - c))
return(area)
}
demi_perimetre <- function(a, b, c) {
p <- (a + b + c)/2
return(p)
}
heron <- function(a, b, c) {
# Calculer le demi-périmètre
p <- (a + b + c) / 2
# Calculer l'aire à l'aide de la formule d'Héron
area <- sqrt(p * (p - a) * (p - b) * (p - c))
return(area)
}
usethis::use_r("demi_parametre")
usethis::use_r("heron")
usethis::use_r("demi_parametre")
usethis::use_r("heron")
demi_perimetre(3,4,5)
heron(3,4,-5)
heron(3,4,2)
View(heron)
heron(3,4,5)
heron(3,4,2)
heron(3,4,-5)
heron(3,4,5)
heron(3,4,2)
heron(3,2,1)
heron(3,2,2)
heron(a,2,1)
heron("a",2,1)
heron(-7,2,1)
heron(-1,2,1)
heron <- function(a,b,c) {
# Vérifiez que chaque argument est numérique
if (!is.numeric(a) || !is.numeric(b) || !is.numeric(c)) {
stop("Les arguments doivent être numériques!")
}
# Vérifiez que chaque argument est positif
if (a < 0 || b < 0 || c < 0) {
stop("Les arguments doivent être positifs!")
}
# Avertir si un des arguments est égal à 0
if (a == 0 || b == 0 || c == 0) {
warning("Un des arguments est égal à 0!")
}
p <- demi_perimetre(a,b,c)
return(sqrt(p*(p-a)*(p-b)*(p-c)))
}
heron("a",2,1)
q
Q
heron(4,2,1)
heron(4,2,1)
heron(6,2,1)
heron(6,2,1)
View(heron)
heron(6,2,3)
